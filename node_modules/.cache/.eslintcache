[{"/Users/hanyang/monster-rolodex/src/index.js":"1","/Users/hanyang/monster-rolodex/src/App.js":"2","/Users/hanyang/monster-rolodex/src/reportWebVitals.js":"3","/Users/hanyang/monster-rolodex/src/components/card-list/card-list.component.jsx":"4","/Users/hanyang/monster-rolodex/src/components/search-box/search-box.component.jsx":"5","/Users/hanyang/monster-rolodex/src/components/card-container/card-container.component.jsx":"6"},{"size":535,"mtime":1652165566695,"results":"7","hashOfConfig":"8"},{"size":2561,"mtime":1652693863664,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1652165566696,"results":"10","hashOfConfig":"8"},{"size":404,"mtime":1652601540869,"results":"11","hashOfConfig":"8"},{"size":332,"mtime":1652601549606,"results":"12","hashOfConfig":"8"},{"size":453,"mtime":1652601554457,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17by8tf",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"/Users/hanyang/monster-rolodex/src/index.js",[],[],"/Users/hanyang/monster-rolodex/src/App.js",["34"],[],"// import { Component } from 'react';\n\nimport { useState, useEffect } from 'react'; \n\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nimport logo from './logo.svg';\nimport './App.css';\n\n\nconst App = () => {\n  const [searchField, setSearchField] = useState(''); \n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n  console.log(searchField); \n\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then((response) => response.json())\n    .then((users) => setMonsters(users)); \n\n  }, [])\n\n  useEffect(() => {\n    const newFilteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField])\n\n  const onSearchChange = (event) => { \n    const searchFieldString = event.target.value.toLocaleLowerCase(); \n    setSearchField(searchFieldString); \n  }\n\n  return (\n    <div className=\"App\">\n      <h1 className='app-title'>Monsters Rolodex</h1>\n      <SearchBox\n        className={'search-box'}  \n        onChangeHandler={onSearchChange}\n        placeHolder='search-monsters'\n      />\n      <CardList monsters={filteredMonsters}/>\n    </div>\n  )\n  \n}\n\n\n/*\nclass App extends Component {\n  \n  constructor() {\n    super(); \n\n    // react is looking for 'state' \n    this.state = {\n      monsters: [], \n      searchField: '' \n    }; \n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then(users => this.setState(\n\n        () => { \n          return { monsters: users };\n        }\n      ))\n  }\n\n  onSearchChange = event => { \n    const searchField = event.target.value.toLocaleLowerCase(); \n     \n    this.setState(() => {\n      return { searchField }; \n    })\n   }\n\n  // add key\n  render() {\n\n    const { monsters, searchField } = this.state;\n    const { onSearchChange } = this; \n  \n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLocaleLowerCase().includes(searchField);\n    });\n\n    return (\n      <div className=\"App\">\n        <h1 className='app-title'>Monsters Rolodex</h1>\n        <SearchBox\n          className={'search-box'}  \n          onChangeHandler={onSearchChange}\n          placeHolder='search-monsters'\n        />\n\n        <CardList monsters={filteredMonsters}/>\n      </div>\n    )\n  }\n  \n}\n*/\n\nexport default App;\n","/Users/hanyang/monster-rolodex/src/reportWebVitals.js",[],[],"/Users/hanyang/monster-rolodex/src/components/card-list/card-list.component.jsx",[],[],[],"/Users/hanyang/monster-rolodex/src/components/search-box/search-box.component.jsx",[],[],"/Users/hanyang/monster-rolodex/src/components/card-container/card-container.component.jsx",[],[],{"ruleId":"35","severity":1,"message":"36","line":8,"column":8,"nodeType":"37","messageId":"38","endLine":8,"endColumn":12},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar"]